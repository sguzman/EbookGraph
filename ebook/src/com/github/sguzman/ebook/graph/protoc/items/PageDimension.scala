// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.github.sguzman.ebook.graph.protoc.items

@SerialVersionUID(0L)
final case class PageDimension(
    height: _root_.scala.Float = 0.0f,
    width: _root_.scala.Float = 0.0f,
    units: com.github.sguzman.ebook.graph.protoc.items.PageDimension.Units = com.github.sguzman.ebook.graph.protoc.items.PageDimension.Units.PTS
    ) extends scalapb.GeneratedMessage with scalapb.Message[PageDimension] with scalapb.lenses.Updatable[PageDimension] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (height != 0.0f) { __size += _root_.com.google.protobuf.CodedOutputStream.computeFloatSize(1, height) }
      if (width != 0.0f) { __size += _root_.com.google.protobuf.CodedOutputStream.computeFloatSize(2, width) }
      if (units != com.github.sguzman.ebook.graph.protoc.items.PageDimension.Units.PTS) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(3, units.value) }
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = height
        if (__v != 0.0f) {
          _output__.writeFloat(1, __v)
        }
      };
      {
        val __v = width
        if (__v != 0.0f) {
          _output__.writeFloat(2, __v)
        }
      };
      {
        val __v = units
        if (__v != com.github.sguzman.ebook.graph.protoc.items.PageDimension.Units.PTS) {
          _output__.writeEnum(3, __v.value)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.github.sguzman.ebook.graph.protoc.items.PageDimension = {
      var __height = this.height
      var __width = this.width
      var __units = this.units
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 13 =>
            __height = _input__.readFloat()
          case 21 =>
            __width = _input__.readFloat()
          case 24 =>
            __units = com.github.sguzman.ebook.graph.protoc.items.PageDimension.Units.fromValue(_input__.readEnum())
          case tag => _input__.skipField(tag)
        }
      }
      com.github.sguzman.ebook.graph.protoc.items.PageDimension(
          height = __height,
          width = __width,
          units = __units
      )
    }
    def withHeight(__v: _root_.scala.Float): PageDimension = copy(height = __v)
    def withWidth(__v: _root_.scala.Float): PageDimension = copy(width = __v)
    def withUnits(__v: com.github.sguzman.ebook.graph.protoc.items.PageDimension.Units): PageDimension = copy(units = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = height
          if (__t != 0.0f) __t else null
        }
        case 2 => {
          val __t = width
          if (__t != 0.0f) __t else null
        }
        case 3 => {
          val __t = units.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PFloat(height)
        case 2 => _root_.scalapb.descriptors.PFloat(width)
        case 3 => _root_.scalapb.descriptors.PEnum(units.scalaValueDescriptor)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.github.sguzman.ebook.graph.protoc.items.PageDimension
}

object PageDimension extends scalapb.GeneratedMessageCompanion[com.github.sguzman.ebook.graph.protoc.items.PageDimension] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.github.sguzman.ebook.graph.protoc.items.PageDimension] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.github.sguzman.ebook.graph.protoc.items.PageDimension = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.github.sguzman.ebook.graph.protoc.items.PageDimension(
      __fieldsMap.getOrElse(__fields.get(0), 0.0f).asInstanceOf[_root_.scala.Float],
      __fieldsMap.getOrElse(__fields.get(1), 0.0f).asInstanceOf[_root_.scala.Float],
      com.github.sguzman.ebook.graph.protoc.items.PageDimension.Units.fromValue(__fieldsMap.getOrElse(__fields.get(2), com.github.sguzman.ebook.graph.protoc.items.PageDimension.Units.PTS.javaValueDescriptor).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.github.sguzman.ebook.graph.protoc.items.PageDimension] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.github.sguzman.ebook.graph.protoc.items.PageDimension(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Float]).getOrElse(0.0f),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Float]).getOrElse(0.0f),
        com.github.sguzman.ebook.graph.protoc.items.PageDimension.Units.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.github.sguzman.ebook.graph.protoc.items.PageDimension.Units.PTS.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ItemsProto.javaDescriptor.getMessageTypes.get(4)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ItemsProto.scalaDescriptor.messages(4)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 3 => com.github.sguzman.ebook.graph.protoc.items.PageDimension.Units
    }
  }
  lazy val defaultInstance = com.github.sguzman.ebook.graph.protoc.items.PageDimension(
  )
  sealed trait Units extends _root_.scalapb.GeneratedEnum {
    type EnumType = Units
    def isPts: _root_.scala.Boolean = false
    def isPx: _root_.scala.Boolean = false
    def isInch: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[Units] = com.github.sguzman.ebook.graph.protoc.items.PageDimension.Units
  }
  
  object Units extends _root_.scalapb.GeneratedEnumCompanion[Units] {
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[Units] = this
    @SerialVersionUID(0L)
    case object PTS extends Units {
      val value = 0
      val index = 0
      val name = "PTS"
      override def isPts: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object PX extends Units {
      val value = 1
      val index = 1
      val name = "PX"
      override def isPx: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object INCH extends Units {
      val value = 2
      val index = 2
      val name = "INCH"
      override def isInch: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(value: _root_.scala.Int) extends Units with _root_.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.Seq(PTS, PX, INCH)
    def fromValue(value: _root_.scala.Int): Units = value match {
      case 0 => PTS
      case 1 => PX
      case 2 => INCH
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.github.sguzman.ebook.graph.protoc.items.PageDimension.javaDescriptor.getEnumTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.github.sguzman.ebook.graph.protoc.items.PageDimension.scalaDescriptor.enums(0)
  }
  implicit class PageDimensionLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.github.sguzman.ebook.graph.protoc.items.PageDimension]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.github.sguzman.ebook.graph.protoc.items.PageDimension](_l) {
    def height: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Float] = field(_.height)((c_, f_) => c_.copy(height = f_))
    def width: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Float] = field(_.width)((c_, f_) => c_.copy(width = f_))
    def units: _root_.scalapb.lenses.Lens[UpperPB, com.github.sguzman.ebook.graph.protoc.items.PageDimension.Units] = field(_.units)((c_, f_) => c_.copy(units = f_))
  }
  final val HEIGHT_FIELD_NUMBER = 1
  final val WIDTH_FIELD_NUMBER = 2
  final val UNITS_FIELD_NUMBER = 3
}
